{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","nav","to","link","circle","Error404","Message","props","style","all","src","avatar","img","angle","container","name","message","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","value","onChange","onKeyPress","GreetingContainer","users","addUserCallback","setName","setError","trimmedUser","trim","alert","length","e","currentTarget","charCode","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","restProps","spanClassName","finalSpanClassName","errorText","finalInputClassName","errorInput","defaultInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.eafbfdff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Message_all__YxPmQ\",\"container\":\"Message_container__39hHe\",\"angle\":\"Message_angle___WeB6\",\"name\":\"Message_name__3A1Jz\",\"message\":\"Message_message__2_eho\",\"time\":\"Message_time__29vg3\",\"img\":\"Message_img__HBRno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__21fBs\",\"circle\":\"Header_circle__3GQ4V\",\"nav\":\"Header_nav__2Uqmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultInput\":\"SuperInputText_defaultInput__1JsZ9\",\"errorInput\":\"SuperInputText_errorInput__3yFeR\",\"error\":\"SuperInputText_error__2Jg2y\",\"errorText\":\"SuperInputText_errorText__a34JQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2Z70O\",\"column\":\"HW4_column__2VNtX\",\"testSpanError\":\"HW4_testSpanError__2nIYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__32CQl\",\"butt\":\"SuperButton_butt__2XULs\",\"hover\":\"SuperButton_hover__3r2zQ\",\"active\":\"SuperButton_active__IjQ-Y\",\"red\":\"SuperButton_red___fJXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__DqVca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__zK-JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1wSuM\",\"error\":\"Greeting_error__jVhmq\"};","import React from \"react\"\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nfunction Header() {\n    return (\n        <div>\n            <nav className={s.nav}>\n                <NavLink to=\"/pre-junior\" className={s.link}>\n                    preJunior\n                </NavLink>\n                <NavLink to=\"/junior\" className={s.link}>\n                    Junior\n                </NavLink>\n                <NavLink to=\"/junior-plus\" className={s.link}>\n                    Junior+\n                </NavLink>\n                <div className={s.circle}/>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from \"react\"\r\nimport style from \"./Message.module.css\"\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={style.all}>\r\n            <img src={props.avatar} className={style.img}/>\r\n            <div className={style.angle}/>\r\n            <div className={style.container}>\r\n                <div className={style.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={style.message}>\r\n                    {props.message}\r\n                    <span className={style.time}>{props.time}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work\r\n\r\n            <Message\r\n              avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from \"react\"\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\r\n\r\n    return (\r\n        <div>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n            <span>{props.affair.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from \"./HW2\"\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}\r\n    const setHigh = () => {props.setFilter(\"high\")}\r\n    const setMiddle = () => {props.setFilter(\"middle\")}\r\n    const setLow = () => {props.setFilter(\"low\")}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\";\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nexport const defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all'){\r\n        return affairs\r\n    }\r\n    else if (filter === \"low\"){\r\n        return affairs.filter(a => a.priority === filter)\r\n    }\r\n    else if (filter === \"middle\"){\r\n        return affairs.filter(a => a.priority === filter)\r\n    }\r\n    else {\r\n        return affairs.filter(a => a.priority === filter)\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n    const aff = affairs.filter(a => a._id !== _id);\r\n    return aff;\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\"\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : \"\"\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}\n            onKeyPress={onEnter}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent,KeyboardEvent, useState} from \"react\"\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (trimmedUser: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n\n    const addUser = () => {\n        const trimmedUser = name.trim();\n        if (trimmedUser){\n            addUserCallback(trimmedUser)\n            alert(`Hello  ${trimmedUser}!`)\n            setName(\"\")\n            setError(\"\")\n        }\n        else {\n            setError(\"Bad name\")\n        }\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13){\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from \"react\"\nimport GreetingContainer from \"./GreetingContainer\"\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user = {_id: v1(), name: name};\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.errorText}`\n    const finalInputClassName = error ? `${s.errorInput}` : `${s.defaultInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from \"react\"\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\"\nimport s from \"./HW4.module.css\"\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\"\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\"\n\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\")\n    const error = text ? \"\" : \"error\"\n\n\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\")\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <div>\r\n        <HW6/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const JuniorPlus = () => {\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\"\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from \"react\"\nimport s from \"./App.module.css\"\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}